//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fleeter.Client.FleeterServiceProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessUnit", Namespace="http://schemas.datacontract.org/2004/07/Fleeter.Core.Models")]
    [System.SerializableAttribute()]
    public partial class BusinessUnit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseResult", Namespace="http://schemas.datacontract.org/2004/07/Fleeter.Core.Services.Results")]
    [System.SerializableAttribute()]
    public partial class BaseResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Fleeter.Client.FleeterServiceProxy.Status StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Fleeter.Client.FleeterServiceProxy.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/Fleeter.Core.Services.Results")]
    public enum Status : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ok = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Created = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Updated = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFound = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BadRequest = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidCredentials = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unauthorized = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Conflict = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternalServerError = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cascade = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/Fleeter.Core.Models")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Fleeter.Client.FleeterServiceProxy.BusinessUnit BusinessUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalutationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Fleeter.Client.FleeterServiceProxy.BusinessUnit BusinessUnit {
            get {
                return this.BusinessUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessUnitField, value) != true)) {
                    this.BusinessUnitField = value;
                    this.RaisePropertyChanged("BusinessUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeNumber {
            get {
                return this.EmployeeNumberField;
            }
            set {
                if ((this.EmployeeNumberField.Equals(value) != true)) {
                    this.EmployeeNumberField = value;
                    this.RaisePropertyChanged("EmployeeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salutation {
            get {
                return this.SalutationField;
            }
            set {
                if ((object.ReferenceEquals(this.SalutationField, value) != true)) {
                    this.SalutationField = value;
                    this.RaisePropertyChanged("Salutation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vehicle", Namespace="http://schemas.datacontract.org/2004/07/Fleeter.Core.Models")]
    [System.SerializableAttribute()]
    public partial class Vehicle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Fleeter.Client.FleeterServiceProxy.VehicleToEmployeeRelation> EmployeeRelationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InsuranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LeasingFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LeasingRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LeasingToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicensePlateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Fleeter.Client.FleeterServiceProxy.VehicleToEmployeeRelation> EmployeeRelations {
            get {
                return this.EmployeeRelationsField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeRelationsField, value) != true)) {
                    this.EmployeeRelationsField = value;
                    this.RaisePropertyChanged("EmployeeRelations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Insurance {
            get {
                return this.InsuranceField;
            }
            set {
                if ((this.InsuranceField.Equals(value) != true)) {
                    this.InsuranceField = value;
                    this.RaisePropertyChanged("Insurance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LeasingFrom {
            get {
                return this.LeasingFromField;
            }
            set {
                if ((this.LeasingFromField.Equals(value) != true)) {
                    this.LeasingFromField = value;
                    this.RaisePropertyChanged("LeasingFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LeasingRate {
            get {
                return this.LeasingRateField;
            }
            set {
                if ((this.LeasingRateField.Equals(value) != true)) {
                    this.LeasingRateField = value;
                    this.RaisePropertyChanged("LeasingRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LeasingTo {
            get {
                return this.LeasingToField;
            }
            set {
                if ((this.LeasingToField.Equals(value) != true)) {
                    this.LeasingToField = value;
                    this.RaisePropertyChanged("LeasingTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicensePlate {
            get {
                return this.LicensePlateField;
            }
            set {
                if ((object.ReferenceEquals(this.LicensePlateField, value) != true)) {
                    this.LicensePlateField = value;
                    this.RaisePropertyChanged("LicensePlate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleToEmployeeRelation", Namespace="http://schemas.datacontract.org/2004/07/Fleeter.Core.Models")]
    [System.SerializableAttribute()]
    public partial class VehicleToEmployeeRelation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Fleeter.Client.FleeterServiceProxy.Employee EmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Fleeter.Client.FleeterServiceProxy.Employee Employee {
            get {
                return this.EmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeField, value) != true)) {
                    this.EmployeeField = value;
                    this.RaisePropertyChanged("Employee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MonthCostDetails", Namespace="http://schemas.datacontract.org/2004/07/Fleeter.Core.Services")]
    [System.SerializableAttribute()]
    public partial class MonthCostDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Costs {
            get {
                return this.CostsField;
            }
            set {
                if ((this.CostsField.Equals(value) != true)) {
                    this.CostsField = value;
                    this.RaisePropertyChanged("Costs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BusinessUnitCostDetails", Namespace="http://schemas.datacontract.org/2004/07/Fleeter.Core.Services")]
    [System.SerializableAttribute()]
    public partial class BusinessUnitCostDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Fleeter.Client.FleeterServiceProxy.BusinessUnit BusinessUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MonthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Fleeter.Client.FleeterServiceProxy.BusinessUnit BusinessUnit {
            get {
                return this.BusinessUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessUnitField, value) != true)) {
                    this.BusinessUnitField = value;
                    this.RaisePropertyChanged("BusinessUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Costs {
            get {
                return this.CostsField;
            }
            set {
                if ((this.CostsField.Equals(value) != true)) {
                    this.CostsField = value;
                    this.RaisePropertyChanged("Costs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Month {
            get {
                return this.MonthField;
            }
            set {
                if ((this.MonthField.Equals(value) != true)) {
                    this.MonthField = value;
                    this.RaisePropertyChanged("Month");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FleeterServiceProxy.IFleeterService")]
    public interface IFleeterService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/GetBusinessUnits", ReplyAction="http://tempuri.org/IFleeterService/GetBusinessUnitsResponse")]
        System.Collections.Generic.List<Fleeter.Client.FleeterServiceProxy.BusinessUnit> GetBusinessUnits();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/GetBusinessUnits", ReplyAction="http://tempuri.org/IFleeterService/GetBusinessUnitsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Fleeter.Client.FleeterServiceProxy.BusinessUnit>> GetBusinessUnitsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/CreateOrUpdateBusinessUnit", ReplyAction="http://tempuri.org/IFleeterService/CreateOrUpdateBusinessUnitResponse")]
        Fleeter.Client.FleeterServiceProxy.BaseResult CreateOrUpdateBusinessUnit(Fleeter.Client.FleeterServiceProxy.BusinessUnit bu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/CreateOrUpdateBusinessUnit", ReplyAction="http://tempuri.org/IFleeterService/CreateOrUpdateBusinessUnitResponse")]
        System.Threading.Tasks.Task<Fleeter.Client.FleeterServiceProxy.BaseResult> CreateOrUpdateBusinessUnitAsync(Fleeter.Client.FleeterServiceProxy.BusinessUnit bu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/DeleteBusinessUnit", ReplyAction="http://tempuri.org/IFleeterService/DeleteBusinessUnitResponse")]
        Fleeter.Client.FleeterServiceProxy.BaseResult DeleteBusinessUnit(Fleeter.Client.FleeterServiceProxy.BusinessUnit bu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/DeleteBusinessUnit", ReplyAction="http://tempuri.org/IFleeterService/DeleteBusinessUnitResponse")]
        System.Threading.Tasks.Task<Fleeter.Client.FleeterServiceProxy.BaseResult> DeleteBusinessUnitAsync(Fleeter.Client.FleeterServiceProxy.BusinessUnit bu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/GetEmployees", ReplyAction="http://tempuri.org/IFleeterService/GetEmployeesResponse")]
        System.Collections.Generic.List<Fleeter.Client.FleeterServiceProxy.Employee> GetEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/GetEmployees", ReplyAction="http://tempuri.org/IFleeterService/GetEmployeesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Fleeter.Client.FleeterServiceProxy.Employee>> GetEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/CreateOrUpdateEmployee", ReplyAction="http://tempuri.org/IFleeterService/CreateOrUpdateEmployeeResponse")]
        Fleeter.Client.FleeterServiceProxy.BaseResult CreateOrUpdateEmployee(Fleeter.Client.FleeterServiceProxy.Employee e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/CreateOrUpdateEmployee", ReplyAction="http://tempuri.org/IFleeterService/CreateOrUpdateEmployeeResponse")]
        System.Threading.Tasks.Task<Fleeter.Client.FleeterServiceProxy.BaseResult> CreateOrUpdateEmployeeAsync(Fleeter.Client.FleeterServiceProxy.Employee e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/DeleteEmployee", ReplyAction="http://tempuri.org/IFleeterService/DeleteEmployeeResponse")]
        Fleeter.Client.FleeterServiceProxy.BaseResult DeleteEmployee(Fleeter.Client.FleeterServiceProxy.Employee e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/DeleteEmployee", ReplyAction="http://tempuri.org/IFleeterService/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task<Fleeter.Client.FleeterServiceProxy.BaseResult> DeleteEmployeeAsync(Fleeter.Client.FleeterServiceProxy.Employee e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/GetVehicles", ReplyAction="http://tempuri.org/IFleeterService/GetVehiclesResponse")]
        System.Collections.Generic.List<Fleeter.Client.FleeterServiceProxy.Vehicle> GetVehicles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/GetVehicles", ReplyAction="http://tempuri.org/IFleeterService/GetVehiclesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Fleeter.Client.FleeterServiceProxy.Vehicle>> GetVehiclesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/CreateOrUpdateVehicle", ReplyAction="http://tempuri.org/IFleeterService/CreateOrUpdateVehicleResponse")]
        Fleeter.Client.FleeterServiceProxy.BaseResult CreateOrUpdateVehicle(Fleeter.Client.FleeterServiceProxy.Vehicle v);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/CreateOrUpdateVehicle", ReplyAction="http://tempuri.org/IFleeterService/CreateOrUpdateVehicleResponse")]
        System.Threading.Tasks.Task<Fleeter.Client.FleeterServiceProxy.BaseResult> CreateOrUpdateVehicleAsync(Fleeter.Client.FleeterServiceProxy.Vehicle v);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/DeleteVehicle", ReplyAction="http://tempuri.org/IFleeterService/DeleteVehicleResponse")]
        Fleeter.Client.FleeterServiceProxy.BaseResult DeleteVehicle(Fleeter.Client.FleeterServiceProxy.Vehicle v);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/DeleteVehicle", ReplyAction="http://tempuri.org/IFleeterService/DeleteVehicleResponse")]
        System.Threading.Tasks.Task<Fleeter.Client.FleeterServiceProxy.BaseResult> DeleteVehicleAsync(Fleeter.Client.FleeterServiceProxy.Vehicle v);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/DeleteEmployeeRelation", ReplyAction="http://tempuri.org/IFleeterService/DeleteEmployeeRelationResponse")]
        Fleeter.Client.FleeterServiceProxy.BaseResult DeleteEmployeeRelation(Fleeter.Client.FleeterServiceProxy.Vehicle v, Fleeter.Client.FleeterServiceProxy.VehicleToEmployeeRelation r);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/DeleteEmployeeRelation", ReplyAction="http://tempuri.org/IFleeterService/DeleteEmployeeRelationResponse")]
        System.Threading.Tasks.Task<Fleeter.Client.FleeterServiceProxy.BaseResult> DeleteEmployeeRelationAsync(Fleeter.Client.FleeterServiceProxy.Vehicle v, Fleeter.Client.FleeterServiceProxy.VehicleToEmployeeRelation r);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/CreateEmployeeRelation", ReplyAction="http://tempuri.org/IFleeterService/CreateEmployeeRelationResponse")]
        Fleeter.Client.FleeterServiceProxy.BaseResult CreateEmployeeRelation(Fleeter.Client.FleeterServiceProxy.Vehicle v, Fleeter.Client.FleeterServiceProxy.VehicleToEmployeeRelation r);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/CreateEmployeeRelation", ReplyAction="http://tempuri.org/IFleeterService/CreateEmployeeRelationResponse")]
        System.Threading.Tasks.Task<Fleeter.Client.FleeterServiceProxy.BaseResult> CreateEmployeeRelationAsync(Fleeter.Client.FleeterServiceProxy.Vehicle v, Fleeter.Client.FleeterServiceProxy.VehicleToEmployeeRelation r);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/GetCostsPerMonth", ReplyAction="http://tempuri.org/IFleeterService/GetCostsPerMonthResponse")]
        System.Collections.Generic.Dictionary<System.DateTime, Fleeter.Client.FleeterServiceProxy.MonthCostDetails> GetCostsPerMonth();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/GetCostsPerMonth", ReplyAction="http://tempuri.org/IFleeterService/GetCostsPerMonthResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.DateTime, Fleeter.Client.FleeterServiceProxy.MonthCostDetails>> GetCostsPerMonthAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/GetCostsPerMonthPerBusinessUnit", ReplyAction="http://tempuri.org/IFleeterService/GetCostsPerMonthPerBusinessUnitResponse")]
        System.Collections.Generic.List<Fleeter.Client.FleeterServiceProxy.BusinessUnitCostDetails> GetCostsPerMonthPerBusinessUnit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFleeterService/GetCostsPerMonthPerBusinessUnit", ReplyAction="http://tempuri.org/IFleeterService/GetCostsPerMonthPerBusinessUnitResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Fleeter.Client.FleeterServiceProxy.BusinessUnitCostDetails>> GetCostsPerMonthPerBusinessUnitAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFleeterServiceChannel : Fleeter.Client.FleeterServiceProxy.IFleeterService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FleeterServiceClient : System.ServiceModel.ClientBase<Fleeter.Client.FleeterServiceProxy.IFleeterService>, Fleeter.Client.FleeterServiceProxy.IFleeterService {
        
        public FleeterServiceClient() {
        }
        
        public FleeterServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FleeterServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FleeterServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FleeterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Fleeter.Client.FleeterServiceProxy.BusinessUnit> GetBusinessUnits() {
            return base.Channel.GetBusinessUnits();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Fleeter.Client.FleeterServiceProxy.BusinessUnit>> GetBusinessUnitsAsync() {
            return base.Channel.GetBusinessUnitsAsync();
        }
        
        public Fleeter.Client.FleeterServiceProxy.BaseResult CreateOrUpdateBusinessUnit(Fleeter.Client.FleeterServiceProxy.BusinessUnit bu) {
            return base.Channel.CreateOrUpdateBusinessUnit(bu);
        }
        
        public System.Threading.Tasks.Task<Fleeter.Client.FleeterServiceProxy.BaseResult> CreateOrUpdateBusinessUnitAsync(Fleeter.Client.FleeterServiceProxy.BusinessUnit bu) {
            return base.Channel.CreateOrUpdateBusinessUnitAsync(bu);
        }
        
        public Fleeter.Client.FleeterServiceProxy.BaseResult DeleteBusinessUnit(Fleeter.Client.FleeterServiceProxy.BusinessUnit bu) {
            return base.Channel.DeleteBusinessUnit(bu);
        }
        
        public System.Threading.Tasks.Task<Fleeter.Client.FleeterServiceProxy.BaseResult> DeleteBusinessUnitAsync(Fleeter.Client.FleeterServiceProxy.BusinessUnit bu) {
            return base.Channel.DeleteBusinessUnitAsync(bu);
        }
        
        public System.Collections.Generic.List<Fleeter.Client.FleeterServiceProxy.Employee> GetEmployees() {
            return base.Channel.GetEmployees();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Fleeter.Client.FleeterServiceProxy.Employee>> GetEmployeesAsync() {
            return base.Channel.GetEmployeesAsync();
        }
        
        public Fleeter.Client.FleeterServiceProxy.BaseResult CreateOrUpdateEmployee(Fleeter.Client.FleeterServiceProxy.Employee e) {
            return base.Channel.CreateOrUpdateEmployee(e);
        }
        
        public System.Threading.Tasks.Task<Fleeter.Client.FleeterServiceProxy.BaseResult> CreateOrUpdateEmployeeAsync(Fleeter.Client.FleeterServiceProxy.Employee e) {
            return base.Channel.CreateOrUpdateEmployeeAsync(e);
        }
        
        public Fleeter.Client.FleeterServiceProxy.BaseResult DeleteEmployee(Fleeter.Client.FleeterServiceProxy.Employee e) {
            return base.Channel.DeleteEmployee(e);
        }
        
        public System.Threading.Tasks.Task<Fleeter.Client.FleeterServiceProxy.BaseResult> DeleteEmployeeAsync(Fleeter.Client.FleeterServiceProxy.Employee e) {
            return base.Channel.DeleteEmployeeAsync(e);
        }
        
        public System.Collections.Generic.List<Fleeter.Client.FleeterServiceProxy.Vehicle> GetVehicles() {
            return base.Channel.GetVehicles();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Fleeter.Client.FleeterServiceProxy.Vehicle>> GetVehiclesAsync() {
            return base.Channel.GetVehiclesAsync();
        }
        
        public Fleeter.Client.FleeterServiceProxy.BaseResult CreateOrUpdateVehicle(Fleeter.Client.FleeterServiceProxy.Vehicle v) {
            return base.Channel.CreateOrUpdateVehicle(v);
        }
        
        public System.Threading.Tasks.Task<Fleeter.Client.FleeterServiceProxy.BaseResult> CreateOrUpdateVehicleAsync(Fleeter.Client.FleeterServiceProxy.Vehicle v) {
            return base.Channel.CreateOrUpdateVehicleAsync(v);
        }
        
        public Fleeter.Client.FleeterServiceProxy.BaseResult DeleteVehicle(Fleeter.Client.FleeterServiceProxy.Vehicle v) {
            return base.Channel.DeleteVehicle(v);
        }
        
        public System.Threading.Tasks.Task<Fleeter.Client.FleeterServiceProxy.BaseResult> DeleteVehicleAsync(Fleeter.Client.FleeterServiceProxy.Vehicle v) {
            return base.Channel.DeleteVehicleAsync(v);
        }
        
        public Fleeter.Client.FleeterServiceProxy.BaseResult DeleteEmployeeRelation(Fleeter.Client.FleeterServiceProxy.Vehicle v, Fleeter.Client.FleeterServiceProxy.VehicleToEmployeeRelation r) {
            return base.Channel.DeleteEmployeeRelation(v, r);
        }
        
        public System.Threading.Tasks.Task<Fleeter.Client.FleeterServiceProxy.BaseResult> DeleteEmployeeRelationAsync(Fleeter.Client.FleeterServiceProxy.Vehicle v, Fleeter.Client.FleeterServiceProxy.VehicleToEmployeeRelation r) {
            return base.Channel.DeleteEmployeeRelationAsync(v, r);
        }
        
        public Fleeter.Client.FleeterServiceProxy.BaseResult CreateEmployeeRelation(Fleeter.Client.FleeterServiceProxy.Vehicle v, Fleeter.Client.FleeterServiceProxy.VehicleToEmployeeRelation r) {
            return base.Channel.CreateEmployeeRelation(v, r);
        }
        
        public System.Threading.Tasks.Task<Fleeter.Client.FleeterServiceProxy.BaseResult> CreateEmployeeRelationAsync(Fleeter.Client.FleeterServiceProxy.Vehicle v, Fleeter.Client.FleeterServiceProxy.VehicleToEmployeeRelation r) {
            return base.Channel.CreateEmployeeRelationAsync(v, r);
        }
        
        public System.Collections.Generic.Dictionary<System.DateTime, Fleeter.Client.FleeterServiceProxy.MonthCostDetails> GetCostsPerMonth() {
            return base.Channel.GetCostsPerMonth();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.DateTime, Fleeter.Client.FleeterServiceProxy.MonthCostDetails>> GetCostsPerMonthAsync() {
            return base.Channel.GetCostsPerMonthAsync();
        }
        
        public System.Collections.Generic.List<Fleeter.Client.FleeterServiceProxy.BusinessUnitCostDetails> GetCostsPerMonthPerBusinessUnit() {
            return base.Channel.GetCostsPerMonthPerBusinessUnit();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Fleeter.Client.FleeterServiceProxy.BusinessUnitCostDetails>> GetCostsPerMonthPerBusinessUnitAsync() {
            return base.Channel.GetCostsPerMonthPerBusinessUnitAsync();
        }
    }
}
